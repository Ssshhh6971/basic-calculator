{"ast":null,"code":"var _jsxFileName = \"/Users/shreyanandhivargam/basic-calculator/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ButtonsContainer from \"./components/ButtonsContainer\";\nimport DisplayContainer from \"./components/DisplayContainer\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [display, setDisplay] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  function handleClick(e) {\n    const targetValue = e.target.name;\n    setDisplay(display + targetValue);\n  }\n  function operatorClick(operator) {\n    let lastCharacter = display.slice(-2);\n    let operatorsArray = [\"+ \", \"- \", \"* \", \"/ \"];\n    if (display === \"\" || operatorsArray.includes(lastCharacter)) return;\n    setDisplay(prevDisplay => {\n      return prevDisplay + \" \" + operator + \" \";\n    });\n  }\n  function handleEqual() {\n    if (display.slice(-2).includes(\"+ \", \"- \", \"* \", \"/ \")) return;\n    try {\n      const resultValue = calculate(display);\n\n      // Keep the display, append the result to it\n      setResult(resultValue);\n      setDisplay(prevDisplay => `${prevDisplay} = ${resultValue}`);\n    } catch (error) {\n      setDisplay(\"Error\");\n    }\n  }\n  function calculate(expression) {\n    const tokens = expression.split(\" \");\n    let resultValue = parseInt(tokens[0]);\n    for (let i = 1; i < tokens.length; i += 2) {\n      const operator = tokens[i];\n      const nextNumber = parseInt(tokens[i + 1]);\n      switch (operator) {\n        case \"+\":\n          resultValue += nextNumber;\n          break;\n        case \"-\":\n          resultValue -= nextNumber;\n          break;\n        case \"*\":\n          resultValue *= nextNumber;\n          break;\n        case \"/\":\n          resultValue /= nextNumber;\n          break;\n        default:\n          resultValue = \"Error\";\n      }\n    }\n    return resultValue;\n  }\n  function clear() {\n    setDisplay(\"\");\n    setResult(\"\");\n  }\n  function backspace() {\n    setDisplay(display.slice(0, -1));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calculator\",\n        children: [/*#__PURE__*/_jsxDEV(DisplayContainer, {\n          display: display // Display both expression and result\n          ,\n          result: result,\n          backspace: backspace,\n          clear: clear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonsContainer, {\n          operatorClick: operatorClick,\n          handleClick: handleClick,\n          handleEqual: handleEqual\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"side-by-side\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white\",\n            children: \"Shreya Nandhivargam\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"FN+CePIsC8RYRZhatbPiCsp8LM0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ButtonsContainer","DisplayContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","display","setDisplay","result","setResult","handleClick","e","targetValue","target","name","operatorClick","operator","lastCharacter","slice","operatorsArray","includes","prevDisplay","handleEqual","resultValue","calculate","error","expression","tokens","split","parseInt","i","length","nextNumber","clear","backspace","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shreyanandhivargam/basic-calculator/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ButtonsContainer from \"./components/ButtonsContainer\";\nimport DisplayContainer from \"./components/DisplayContainer\";\nimport \"./styles.css\";\n\nfunction App() {\n  const [display, setDisplay] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  function handleClick(e) {\n    const targetValue = e.target.name;\n    setDisplay(display + targetValue);\n  }\n\n  function operatorClick(operator) {\n    let lastCharacter = display.slice(-2);\n    let operatorsArray = [\"+ \", \"- \", \"* \", \"/ \"];\n\n    if (display === \"\" || operatorsArray.includes(lastCharacter)) return;\n\n    setDisplay((prevDisplay) => {\n      return prevDisplay + \" \" + operator + \" \";\n    });\n  }\n\n  function handleEqual() {\n    if (display.slice(-2).includes(\"+ \", \"- \", \"* \", \"/ \")) return;\n\n    try {\n      const resultValue = calculate(display);\n\n      // Keep the display, append the result to it\n      setResult(resultValue);\n      setDisplay((prevDisplay) => `${prevDisplay} = ${resultValue}`);\n    } catch (error) {\n      setDisplay(\"Error\");\n    }\n  }\n\n  function calculate(expression) {\n    const tokens = expression.split(\" \");\n    let resultValue = parseInt(tokens[0]);\n\n    for (let i = 1; i < tokens.length; i += 2) {\n      const operator = tokens[i];\n      const nextNumber = parseInt(tokens[i + 1]);\n\n      switch (operator) {\n        case \"+\":\n          resultValue += nextNumber;\n          break;\n        case \"-\":\n          resultValue -= nextNumber;\n          break;\n        case \"*\":\n          resultValue *= nextNumber;\n          break;\n        case \"/\":\n          resultValue /= nextNumber;\n          break;\n        default:\n          resultValue = \"Error\";\n      }\n    }\n    return resultValue;\n  }\n\n  function clear() {\n    setDisplay(\"\");\n    setResult(\"\");\n  }\n\n  function backspace() {\n    setDisplay(display.slice(0, -1));\n  }\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"calculator\">\n          <DisplayContainer\n            display={display}  // Display both expression and result\n            result={result}\n            backspace={backspace}\n            clear={clear}\n          />\n          <ButtonsContainer\n            operatorClick={operatorClick}\n            handleClick={handleClick}\n            handleEqual={handleEqual}\n          />\n          <div className=\"side-by-side\">\n            <p className=\"text-white\">{/* Date dynamically */}</p>\n            <p className=\"text-white\">Shreya Nandhivargam</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}